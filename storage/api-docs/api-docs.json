{
    "openapi": "3.0.0",
    "info": {
        "title": "EasyTravel API",
        "description": "Documentation for EasyTravel project.",
        "contact": {
            "email": "21732184@live.uem.es"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Create a new user.",
                "description": "Register a new user in database.",
                "operationId": "authRegister",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "User name.",
                                        "type": "string"
                                    },
                                    "surnames": {
                                        "description": "User surnames.",
                                        "type": "string"
                                    },
                                    "dni": {
                                        "description": "User id.",
                                        "type": "string"
                                    },
                                    "phoneNumber": {
                                        "description": "User phone number.",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "User email.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password.",
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "description": "User password confirmation.",
                                        "type": "string"
                                    },
                                    "role": {
                                        "description": "User role (default 2)",
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "Cient",
                                    "surnames": "EasyTravel",
                                    "dni": "00000000a",
                                    "phoneNumber": "000000001",
                                    "email": "client@easytravel.com",
                                    "password": "client",
                                    "password_confirmation": "client",
                                    "role": 2
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "User name.",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "User surnames.",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Alive time of the token in seconds. Default 3600s",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9hdXRoXC9yZWdpc3RlciIsImlhdCI6MTU4ODQ5Mjk5MSwiZXhwIjoxNTg4NDk2NTkxLCJuYmYiOjE1ODg0OTI5OTEsImp0aSI6ImRMWjNQcmN0Tm5UUEdtanMiLCJzdWIiOjUsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.mNh-Rfalspe1SBH_ltfz_ErIAhExJwDIA8td69fZvWA",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The dni field is required.",
                                            "The name field is required.",
                                            "The surnames must be a string.",
                                            "The phoneNumber field is required.",
                                            "The email field is required.",
                                            "The password field is required.",
                                            "The role field must be numeric."
                                        ]
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "User login.",
                "description": "Generate a JWT token with credentials.",
                "operationId": "authLogin",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "description": "User email.",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "User password.",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "email": "client@easytravel.com",
                                    "password": "client"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "User name.",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "User surnames.",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Alive time of the token in seconds. Default 3600s",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9hdXRoXC9yZWdpc3RlciIsImlhdCI6MTU4ODQ5Mjk5MSwiZXhwIjoxNTg4NDk2NTkxLCJuYmYiOjE1ODg0OTI5OTEsImp0aSI6ImRMWjNQcmN0Tm5UUEdtanMiLCJzdWIiOjUsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.mNh-Rfalspe1SBH_ltfz_ErIAhExJwDIA8td69fZvWA",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The email field is required.",
                                            "The password field is required."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": "Invalid credentials."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Token error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": "Could not create access token."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Refresh token.",
                "description": "Refresh JWT token.",
                "operationId": "authRefresh",
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "User name.",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "User surnames.",
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "description": "Alive time of the token in seconds. Default 3600s",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "access_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC9sb2NhbGhvc3Q6ODAwMFwvYXBpXC9hdXRoXC9yZWdpc3RlciIsImlhdCI6MTU4ODQ5Mjk5MSwiZXhwIjoxNTg4NDk2NTkxLCJuYmYiOjE1ODg0OTI5OTEsImp0aSI6ImRMWjNQcmN0Tm5UUEdtanMiLCJzdWIiOjUsInBydiI6Ijg3ZTBhZjFlZjlmZDE1ODEyZmRlYzk3MTUzYTE0ZTBiMDQ3NTQ2YWEifQ.mNh-Rfalspe1SBH_ltfz_ErIAhExJwDIA8td69fZvWA",
                                        "token_type": "bearer",
                                        "expires_in": 3600
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": "Invalid credentials."
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Token error.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": "Could not create access token."
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/training": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Training Model",
                "description": "Create a training model with the data between a start date and and end date.",
                "operationId": "getTrainingModel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "characteristic": {
                                        "description": "Characteristics selected for the training model",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "start_date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    },
                                    "end_date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    },
                                    "algorithm_id": {
                                        "description": "Algorithm id selected for the training",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "characteristic": [
                                        "id",
                                        "date",
                                        "time",
                                        "airline_id",
                                        "city_id",
                                        "airport_id",
                                        "delay",
                                        "temperature",
                                        "humidity",
                                        "pressure",
                                        "wind_direction",
                                        "wind_speed"
                                    ],
                                    "start_date": "2020-04-20",
                                    "end_date": "2020-04-24",
                                    "algorithm_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The characteristic field is required.",
                                            "The start date field is required.",
                                            "The end date field is required.",
                                            "The algorithm id field is required.",
                                            "The characteristic must be an array.",
                                            "The start date is not a valid date.",
                                            "The end date is not a valid date.",
                                            "The start date does not match the format Y-m-d.",
                                            "The end date does not match the format Y-m-d.",
                                            "The algorithm id must be an integer.",
                                            "The start date must be a date before or equal to yesterday.",
                                            "The end date must be a date before or equal to today.",
                                            "The selected algorithm id is invalid.",
                                            "Not all characteristic exists.",
                                            "There are no registered flights for these dates."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/predict": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Predict flight data",
                "description": "This function is used to predict flight data.",
                "operationId": "getPredictModel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "start_date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    },
                                    "end_date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "start_date": "2020-04-25",
                                    "end_date": "2020-04-26"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 20
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The start date field is required.",
                                            "The end date field is required.",
                                            "The start date is not a valid date.",
                                            "The end date is not a valid date.",
                                            "The start date does not match the format Y-m-d.",
                                            "The end date does not match the format Y-m-d.",
                                            "The start date must be a date before or equal to today.",
                                            "The end date must be a date before or equal to today.",
                                            "There are no registered flights for these dates."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/updateModel": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Select model in use",
                "description": "It is used to select the model that is used in the application.",
                "operationId": "setSelectedModel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model": {
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "model": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok."
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The model id field is required.",
                                            "The model id must be an integer.",
                                            "The selected model id is invalid."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/algorithms": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Get all algorithms",
                "description": "It is used to get all information of each algorithm of the database.",
                "operationId": "getAlgorithms",
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "response": {
                                            "description": "All algorithms",
                                            "type": "array",
                                            "items": {
                                                "type": "json"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": [
                                        {
                                            "id": 0,
                                            "name": "Naive Bayes",
                                            "description": "It is a supervised classification and prediction technique that classifies a case maximizing the probability that it will occur under certain conditions. For example, if we want to classify whether we have a pair or a trio in our deck, the algorithm will determine what we are most likely to find in each of our 5-card hands. With Bayes' Theorem we can find the probability that A (hypothesis) will occur, given that B (evidence) has occurred."
                                        },
                                        {
                                            "id": 1,
                                            "name": "Random Forest",
                                            "description": "Random forest is an Artificial Intelligence algorithm that combines many independent decision trees on random data sets with the same distribution."
                                        },
                                        {
                                            "id": 2,
                                            "name": "Gradient Boosting",
                                            "description": "Gradient Boosted Tree produces a predictive model in the form of a set of weak decision trees. Construct the model in a staggered fashion like other boosting methods do, and generalize them by allowing arbitrary optimization of a differentiable loss function."
                                        },
                                        {
                                            "id": 3,
                                            "name": "Decision Tree",
                                            "description": "The goal of this algorithm is to find the simplest tree that best separates the examples. This algorithm is used for classification and regression. It is a supervised learning system and when implemented the 'divide and conquer' strategy is applied."
                                        },
                                        {
                                            "id": 4,
                                            "name": "k-nn",
                                            "description": "The k-NN algorithm is based on comparing an unknown example with the training examples that are the closest neighbors of the unknown example."
                                        },
                                        {
                                            "id": 5,
                                            "name": "Logistic Regression",
                                            "description": "Logistic regression is a statistical method of analyzing a data set in which there are one or more independent variables that determine an outcome. The result is measured with a binomial variable Predicts the probability of occurrence of an event by fitting the data to a logit function."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/models": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Get all models",
                "description": "It is used to get all information of each model of the database.",
                "operationId": "getModels",
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "response": {
                                            "description": "All models",
                                            "type": "array",
                                            "items": {
                                                "type": "json"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": [
                                        {
                                            "id": 1,
                                            "type": 1,
                                            "date": "2020-05-05 01:34:45",
                                            "report_num_rows": 179,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        },
                                        {
                                            "id": 3,
                                            "type": 2,
                                            "date": "2020-05-08 23:55:21",
                                            "report_num_rows": 27,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        },
                                        {
                                            "id": 4,
                                            "type": 2,
                                            "date": "2020-05-08 23:56:48",
                                            "report_num_rows": 27,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/lastModels": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Get info about last models",
                "description": "It is used to get all information for get the last models created in the database.",
                "operationId": "getLastModels",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_id": {
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "model_id": 3
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "response": {
                                            "description": "All models",
                                            "type": "array",
                                            "items": {
                                                "type": "json"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": [
                                        {
                                            "id": 8,
                                            "type": 1,
                                            "date": "2020-05-05 01:34:45",
                                            "report_num_rows": 179,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        },
                                        {
                                            "id": 9,
                                            "type": 2,
                                            "date": "2020-05-08 23:55:21",
                                            "report_num_rows": 27,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        },
                                        {
                                            "id": 10,
                                            "type": 2,
                                            "date": "2020-05-08 23:56:48",
                                            "report_num_rows": 27,
                                            "report_precision_0": "1.00",
                                            "report_precision_1": "1.00",
                                            "report_recall_0": "1.00",
                                            "report_recall_1": "1.00",
                                            "report_f1_score_0": "1.00",
                                            "report_f1_score_1": "1.00",
                                            "report_accuracy_precision": "1.00",
                                            "report_accuracy_recall": "1.00",
                                            "report_accuracy_f1_score": "1.00"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/models/deleteModel": {
            "post": {
                "tags": [
                    "models"
                ],
                "summary": "Delete a selected model",
                "description": "It is used for delete a model in the database.",
                "operationId": "deleteModel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "model_id": {
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "model_id": 1
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Ok. No Content."
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that thorws the execption.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/weathers/forecast": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "El Tiempo scraper",
                "description": "Launches El Tiempo scraper for tomorrow's forecast data",
                "operationId": "getWeathersForecast",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "airport_id": {
                                        "description": "Departure airport id",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "airport_id": 5306
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 24
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The airport id field is required.",
                                            "The airport id must be an integer.",
                                            "The selected airport id is invalid.",
                                            "The airport does not have ICAO."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/weathers/history": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "Tu Tiempo scraper",
                "description": "Launches Tu Tiempo scraper with the requested date and departure airport id.",
                "operationId": "getWeathersHistory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    },
                                    "airport_id": {
                                        "description": "Departure airport id",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "date": "2020-04-20",
                                    "airport_id": 5306
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 47
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The date field is required.",
                                            "The date is not a valid date.",
                                            "The date does not match the format Y-m-d.",
                                            "The date must be a date before or equal to yesterday.",
                                            "The airport id field is required.",
                                            "The airport id must be an integer.",
                                            "The selected airport id is invalid.",
                                            "The airport does not have ICAO."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/flights/history": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "Airportia historical scraper",
                "description": "Launches Airportia historical scraper with the requested date and with the departure airport id.",
                "operationId": "getFlightsHistory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "date": {
                                        "description": "Date in format Y-m-d",
                                        "type": "date"
                                    },
                                    "airport_id": {
                                        "description": "Departure airport id",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "date": "2020-04-12",
                                    "airport_id": 5327
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 47
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The date field is required.",
                                            "The date is not a valid date.",
                                            "The date does not match the format Y-m-d.",
                                            "The date must be a date before or equal to yesterday.",
                                            "The airport id field is required.",
                                            "The airport id must be an integer.",
                                            "The selected airport id is invalid.",
                                            "The airport does not have url."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/flights/forecast": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "Airportia forecast scraper",
                "description": "Launches Airportia forecast scraper with the requested departure airport id.",
                "operationId": "getFlightsForecast",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "airport_id": {
                                        "description": "Departure airport id",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "airport_id": 5306
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 47
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The airport id field is required.",
                                            "The airport id must be an integer.",
                                            "The selected airport id is invalid.",
                                            "The airport does not have url."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/airportia/url": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "Add the url of an Airportia airport to the database.",
                "description": "Launches URL Airportia scraper with the requested country id.",
                "operationId": "setAirportUrl",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "country_id": {
                                        "description": "Id of a country in the database.",
                                        "type": "int"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "country_id": 199
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 20
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The country id field is required.",
                                            "The country id must be an integer.",
                                            "The selected country id is invalid."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/scrapers/comments": {
            "post": {
                "tags": [
                    "scrapers"
                ],
                "summary": "Get comments from TripAdvisor",
                "description": "Gets all the comments from tripadvisor based on a query/search that will be a city id",
                "operationId": "getComments",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city_id": {
                                        "description": "City",
                                        "type": "integer"
                                    }
                                },
                                "type": "object",
                                "example": [
                                    {
                                        "city_id": 5049
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ok.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "description": "Total inserted documents",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "total": 24
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "List of errors.",
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "errors": [
                                            "The city id field is required.",
                                            "The city id must be an integer.",
                                            "The selected city id is invalid."
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Server message that contains the error.",
                                            "type": "string"
                                        },
                                        "exception": {
                                            "description": "Generated exception.",
                                            "type": "string"
                                        },
                                        "file": {
                                            "description": "File that throw the exception.",
                                            "type": "string"
                                        },
                                        "line": {
                                            "description": "Line that throws the exception.",
                                            "type": "integer"
                                        },
                                        "trace": {
                                            "description": "Trace route objects.",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object",
                                    "example": {
                                        "messagge": "The command failed.",
                                        "exception": "",
                                        "file": "",
                                        "line": 150,
                                        "trace": {
                                            "file": "",
                                            "line": 1,
                                            "content": ""
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "scrapers",
            "description": "Operations with scrapers."
        },
        {
            "name": "auth",
            "description": "Authentication operations."
        }
    ]
}